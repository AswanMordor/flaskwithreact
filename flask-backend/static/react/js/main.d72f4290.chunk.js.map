{"version":3,"sources":["img/anna-bio.png","img/andy-bio.png","img/neel-bio.png","img/eric-bio.png","img/sam-bio.png","img/usman-bio.png","img/header.png","item.js","sidenav.js","findmyfit.js","about.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ITEMS","React","Component","name","brand","price","size","picURL","ItemCard","Card","className","src","this","props","Item","alt","Results","items","i","length","push","SideNav","state","submitHandler","e","alert","preventDefault","searched","refs","search","value","console","log","sortItemsBy","sortedItems","sort","a","b","setState","class","onSubmit","InputGroup","FormControl","ref","placeholder","Button","id","style","color","backgroundColor","border","textAlign","href","onClick","type","min","max","step","FindMyFit","fileRef","createRef","selectedFile","fileUploadHandler","event","target","files","document","getElementById","click","onChange","hidden","uploadClick","About","Container","width","height","neel","anna","eric","andy","sam","usman","CreateUser","Login","FindFit","App","banner","to","path","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"js/main.d72f4290.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/anna-bio.6294695d.png\";","module.exports = __webpack_public_path__ + \"media/andy-bio.4265f871.png\";","module.exports = __webpack_public_path__ + \"media/neel-bio.44527d68.png\";","module.exports = __webpack_public_path__ + \"media/eric-bio.0a232d1b.png\";","module.exports = __webpack_public_path__ + \"media/sam-bio.532af86e.png\";","module.exports = __webpack_public_path__ + \"media/usman-bio.5a4de8a6.png\";","module.exports = __webpack_public_path__ + \"media/header.2b4fc674.png\";","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nclass Item extends React.Component{\n  constructor(props) {\n    this.state = {\n      name: props.name,\n      brand: props.brand,\n      price: props.price,\n      size: props.size,\n      picURL: props.pic\n    };\n  }\n}\n\nvar ITEMS = [{\n  name: \"T-shirt with Printed Design\",\n  brand:\"H&M\",\n  price:17.99,\n  size: \"S\",\n  picURL:\"https://lp2.hm.com/hmgoepprod?set=source[/c6/5b/c65b5bc3901ded4d45c5ba20ef54649a7b2bb800.jpg],origin[dam],category[],type[DESCRIPTIVESTILLLIFE],res[m],hmver[1]&call=url[file:/product/main]\"\n},\n{\n  name:\"Patterned Muscle Fit T-shirt\",\n  brand: \"H&M\",\n  price: 14.99,\n  size: \"M\",\n  picURL: \"https://lp2.hm.com/hmgoepprod?set=source[/cd/60/cd60e92aee6f9c90c4a81c0be2c0ee9117bc0bfc.jpg],origin[dam],category[men_tshirtstanks_shortsleeve],type[LOOKBOOK],res[m],hmver[1]&call=url[file:/product/main]\"\n},\n{\n  name: \"Oversize washed T-shirt with Gucci logo\",\n  brand: \"GUCCI\",\n  price: 480,\n  size: \"L\",\n  picURL: \"https://media.gucci.com/style/DarkGray_Center_0_0_1200x1200/1537902006/440103_X3F05_1508_001_100_0000_Light-Oversize-washed-T-shirt-with-Gucci-logo.jpg\"\n}\n];\n\n\nclass ItemCard extends React.Component{\n  render(){\n    return(\n    <Card className=\"itemCard\">\n      <figure>\n        <img src={this.props.Item.picURL} alt={this.props.Item.name} />\n        <article>\n          <ul>\n            <li>{this.props.Item.name}</li>\n            <li>{this.props.Item.brand}</li>\n            <li>{this.props.Item.price}</li>\n            <li>{this.props.Item.size}</li>\n          </ul>\n        </article>\n      </figure>\n    </Card>\n    );\n  }\n}\n\nclass Results extends React.Component {\n  render(){\n    var items = [];\n    for( var i = 0; i < ITEMS.length; i++){\n      items.push(<ItemCard />);\n    }\n\n    return(<div>items</div>);\n  }\n}\n\nexport default Results;","import React from \"react\";\nimport { Card, InputGroup, FormControl, Button } from 'react-bootstrap';\nimport \"./css/sidenav.css\";\nimport {Item, ItemCard } from './item';\n\nclass SideNav extends React.Component {\n\n  state = {\n    items: []\n  }\n\n  // sortItemsBy(prop){\n  //   switch(prop){\n  //     case 'a_z':\n  //       return items.sort();\n  //   }\n  // }\n  \n  submitHandler = (e) => {\n    // console.log(document.getElementById(\"search\"));\n    alert(\"submitted\");\n    e.preventDefault();\n    const searched = this.refs.search.value;\n    console.log(searched);\n  }\n\n  sortItemsBy = (items) => {\n    var sortedItems = items.sort( (a,b) => {\n      if(a.name > b.name) {\n        return 1;\n      }\n      if(a.name < b.name){\n        return -1;\n      }\n      return 0;\n    });\n\n    this.setState(\"items\", sortedItems);\n  }\n\n  render() {\n    return (\n      <div class=\"sidenav\">\n        <ul>\n          <li>Find My Fit</li>\n          <hr/>\n\n          <li>Search</li>\n          <form onSubmit={this.submitHandler}>\n            <InputGroup size=\"sm\">\n              <FormControl ref=\"search\" placeholder=\"Search...\" onSubmit={this.submitHandler} />\n            </InputGroup>\n          </form>\n          <hr/>\n\n          <li>Sort By</li>\n          <li>\n            <Button id=\"a_z\" style={{color:\"black\", backgroundColor:\"lightgray\", border:\"none\", textAlign:\"left\"}} href=\"/sort/a-z\" onClick={this.sortItemsBy}>Brand A-Z</Button>\n          </li>\n          <li>\n            <Button id=\"z_a\" style={{color:\"black\", backgroundColor:\"lightgray\", border:\"none\", textAlign:\"left\"}} class=\"propButton\" href=\"/sort/z-a\">Brand Z-A</Button>\n          </li>\n          <li>\n            <Button id=\"s_xxl\" style={{color:\"black\", backgroundColor:\"lightgray\", border:\"none\", textAlign:\"left\"}} class=\"propButton\" href=\"#\">Size S-XXL</Button>\n          </li>\n          <li>\n            <Button id=\"xxl_s\" style={{color:\"black\", backgroundColor:\"lightgray\", border:\"none\", textAlign:\"left\"}} class=\"propButton\" href=\"#\">Size XXL-S</Button>\n          </li>\n          <li>\n            <Button id=\"lo_hi\" style={{color:\"black\", backgroundColor:\"lightgray\", border:\"none\", textAlign:\"left\"}} class=\"propButton\" href=\"#\">Price Low to High</Button>\n          </li>\n          <li>\n            <Button id=\"hi_lo\" style={{color:\"black\", backgroundColor:\"lightgray\", border:\"none\", textAlign:\"left\"}} class=\"propButton\" href=\"#\">Price High to Low</Button>\n          </li>\n          <hr/>\n\n          <li>Filter By</li>\n          <li>\n            <label>\n              Price $0-$10,000\n              <input\n                id=\"price-range\"\n                type=\"range\"\n                value=\"2\"\n                min=\"0\"\n                max=\"10000\"\n                step=\"20\"\n              />\n            </label>\n          </li>\n          <li>\n            <label>\n              Size S-XXL\n              <input\n                id=\"size-range\"\n                type=\"range\"\n                value=\"2\"\n                min=\"0\"\n                max=\"4\"\n                step=\"1\"\n              />\n            </label>\n          </li>\n          <hr/>\n\n          <li>Brand</li>\n          <li>\n            <a href=\"#\">Aeropostale</a>\n          </li>\n          <li>\n            <a href=\"#\">Calvin Klein</a>\n          </li>\n          <li>\n            <a href=\"#\">Gucci</a>\n          </li>\n          <li>\n            <a href=\"#\">Versace</a>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default SideNav;\n","import React from \"react\";\nimport SideNav from \"./sidenav\";\nimport \"./css/findmyfit.css\";\n// import 'bootstrap/js/dist/button';\nimport Results from \"./item\";\n\nclass FindMyFit extends React.Component {\n\n  fileRef = React.createRef();\n\n  uploadClick() {\n    document.getElementById(\"uploadImg\").click()\n  }\n\n  state = {\n    selectedFile: null\n  }\n\n  fileUploadHandler = event => {\n    this.setState({\n      selectedFile: event.target.files[0]\n    })\n  };\n\n  const\n\n  render() {\n    return (\n      <div class=\"content\">\n        <SideNav />\n        <div class=\"upload\">\n          <input id=\"uploadImg\" type=\"file\" onChange={this.fileUploadHandler} hidden/>\n          <button type=\"button\" class=\"btn btn-outline-dark\" onClick={this.uploadClick}>Upload</button>\n          {/* <img src={require(this.state.selectedFile)} /> */}\n        </div>\n\n        <Results />\n      </div>\n    );\n  }\n}\n\nexport default FindMyFit;\n","import React from 'react';\nimport { Carousel, Container } from 'react-bootstrap';\nimport anna from './img/anna-bio.png';\nimport andy from './img/andy-bio.png';\nimport neel from './img/neel-bio.png';\nimport eric from './img/eric-bio.png';\nimport sam from './img/sam-bio.png';\nimport usman from './img/usman-bio.png';\nimport \"./css/about.css\"\n\nconst responsive = {\n  superLargeDesktop: {\n    // the naming can be any, depends on you.\n    breakpoint: { max: 4000, min: 3000 },\n    items: 5,\n  },\n  desktop: {\n    breakpoint: { max: 3000, min: 1024 },\n    items: 3,\n  },\n  tablet: {\n    breakpoint: { max: 1024, min: 464 },\n    items: 2,\n  },\n  mobile: {\n    breakpoint: { max: 464, min: 0 },\n    items: 1,\n  },\n};\nclass About extends React.Component{\n\n  render(){\n    return(\n      <div>\n        <h1>About FitFinder</h1>\n        <br />\n        <Container >\n          <p style={{textAlign:\"center\"}}>\n          Our vision for Fit Finder is that it will be able to make the process of finding new clothing fits easier and intuitive. Because fashion is a constantly evolving industry, it can be challenging to keep up and finding personal style can be even more difficult because there are so many different styles. Whether an individual is someone who wants to get into fashion, or someone who wants to try new things, everyone can use a little help with the process. Our application will scrape various clothing websites for products of various styles and store it in a database that users can reference when they execute a search. Our product will incorporate a social feature in addition to our database. Users can post their current fits or ideas to get feedback from others, and similarly can view other posts to get inspiration and give feedback. Currently, existing alternatives are going to social media sites like Reddit, Pinterest, or Instagram to get/give critique/inspiration, or some websites that help you find products such as Google. There doesn’t exist an application that combines both of these features. Google’s product search is not specific enough to clothing to be useful. This product is worth developing because nowadays, fashion is becoming more and more popular but can be difficult to get into or evolve in. As an art form, it is extremely diverse and almost limitless. We want to provide a platform where individuals have the resources and support to really find their version of self-expression.\n          </p>\n        </Container>\n        <br />\n        <hr />\n        <br />\n        {/* <Carousel>\n          <Carousel.Item id=\"carItem\">\n            <img width=\"auto\" height={500}\n              src={neel}\n                alt=\"neel\"\n                // class=\"img-fluid\"\n              />\n            <Carousel.Caption>\n              <h3>Neel</h3>\n            </Carousel.Caption>\n          </Carousel.Item>\n\n          <Carousel.Item id=\"carItem\">\n            <img\n              src={anna}\n                alt=\"anna\"\n                width=\"auto\" height={500}\n                // class=\"img-fluid\"\n              />\n            <Carousel.Caption>\n              <h3>second slide</h3>\n              <p>Hello</p>\n            </Carousel.Caption>\n          </Carousel.Item>\n\n          <Carousel.Item id=\"carItem\">\n            <img\n              src={eric}\n                alt=\"eric\"\n                width=\"auto\" height={500}\n                // class=\"img-fluid\"\n              />\n            <Carousel.Caption>\n              <h3>second slide</h3>\n            </Carousel.Caption>\n          </Carousel.Item>\n\n          <Carousel.Item id=\"carItem\">\n            <img\n              src={andy}\n                alt=\"andy\"\n                width=\"auto\" height={500}\n                // class=\"img-fluid\"\n              />\n            <Carousel.Caption>\n              <h3>second slide</h3>\n            </Carousel.Caption>\n          </Carousel.Item>\n\n          <Carousel.Item id=\"carItem\">\n            <img\n              src={sam}\n                alt=\"sam\"\n                width=\"auto\" height={500}\n                // class=\"img-fluid\"\n              />\n            <Carousel.Caption>\n              <h3>second slide</h3>\n            </Carousel.Caption>\n          </Carousel.Item>\n\n          <Carousel.Item id=\"carItem\">\n            <img\n              src={usman}\n                alt=\"usman\"\n                width=\"auto\" height={500}\n                // class=\"img-fluid\"\n              />\n            <Carousel.Caption>\n              <h3>second slide</h3>\n            </Carousel.Caption>\n          </Carousel.Item>\n        </Carousel> */}\n        <Container>\n        <div>\n          <Container>\n          <img width=\"auto\" height={500}\n              src={neel}\n                alt=\"neel\"\n                // class=\"img-fluid\"\n              />\n              <h1>Neel Drain</h1>\n            <p>Front-End</p>\n            <p>Commits: 13, Issues: 0, Unit Tests: 0</p>\n          </Container>\n          <Container>\n            <img\n              src={anna}\n                alt=\"anna\"\n                width=\"auto\" height={500}\n                // class=\"img-fluid\"\n            />\n            <h1>Anna Sim</h1>\n            <p>Front End</p>\n            <p>Commits: 12, Issues: 0, Unit Tests: 0</p>\n          </Container>\n          </div>\n\n          <div>\n          <Container>\n            <img\n              src={eric}\n                alt=\"eric\"\n                width=\"auto\" height={500}\n                // class=\"img-fluid\"\n            />\n            <h1>Eric Luo</h1>\n            <p>Back End</p>\n            <p>Commits: 1, Issues: 0, Unit Tests: 0</p>\n          </Container>\n          </div>\n\n          <Container>\n            <img\n              src={andy}\n                alt=\"andy\"\n                width=\"auto\" height={500}\n                // class=\"img-fluid\"\n            />\n            <h1>Andy Prevalksy</h1>\n            <p>Back End</p>\n            <p>Commits: 0, Issues: 0, Unit Tests: 0</p>\n          </Container>\n\n\n          <Container>\n            <img\n              src={sam}\n                alt=\"anna\"\n                width=\"auto\" height={500}\n                // class=\"img-fluid\"\n            />\n            <h1>Sam Wang</h1>\n            <p>Back End</p>\n            <p>Commits: 0, Issues: 0, Unit Tests: 0</p>\n          </Container>\n\n          <Container>\n            <img\n              src={usman}\n                alt=\"anna\"\n                width=\"auto\" height={500}\n                // class=\"img-fluid\"\n            />\n            <h1>Usman Farooqi</h1>\n            <p>Back End</p>\n            <p>Commits: 2, Issues: 0, Unit Tests: 0</p>\n          </Container>\n\n        </Container>\n\n        <hr />\n        <br />\n        <div>\n        <h1>Tools Used</h1>\n          <p>SASS as a CSS pre-processor tomake styling easier, UIKit as a web framework to make layout and syling easier</p>\n          <p>Front-end created in VSCode editor with liveCode and watch sass plugins</p>\n          <p>The scraper works by sending a GET request to H&M's view all clothing page, which gives us the links for each individual item. In this GET request we pass headers taken from Chrome's network tab to simulate an actual user accessing the website and to bypass a security check. We then scrape the html of the view all page, checking for all links with the string \"productpage\" in the url, these are the links to actual products. From there we concatenate the url with the H&M base domain url to access the individual pages themselves, and rip the image links for the image that is just a picture of the clothing. Finally we scrape the product name and price and store all the data for batch-writing to the Firebase database.</p>\n          <p>\n            <a href=\"https://www2.hm.com/en_us/men/products/view-all.html\">\n            Our data source</a>\n          </p>\n          <p>Python requests (used to make api requests) and Python beautifulsoup (used to parse html of request response)</p>\n          <h1>Github Repo</h1>\n          <p> <a href=\"https://github.com/usmanhf/FitFinder\">Our FitFinder Github</a> </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport FindMyFit from \"./findmyfit\";\nimport About from \"./about\";\nimport \"./css/App.css\";\nimport \"./css/navbar.css\";\nimport { Button } from 'react-bootstrap';\nimport banner from \"./img/header.png\";\n// import banner from \"./img/header2.png\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <div>\n          <div>\n            {/* <img src={require(\"/Users/nnsim/Documents/EE461L/FitFinder/site-2-react/fitfinder-react/src/header.png\")} /> */}\n            <img src={banner} alt={\"banner\"} />\n          </div>\n          <div class=\"topnav\">\n             <Link class=\"link\" to=\"/about\">\n              About\n            </Link>\n\n            <Link class=\"link\" to=\"/findmyfit\">\n              Find Your Fit\n            </Link>\n\n            <Link class=\"link\" to=\"/createuser\">\n              Create an Account\n            </Link>\n\n             <Link class=\"link\" to=\"/login\">\n              Login\n            </Link>\n          </div>\n\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n            <Route path=\"/findmyfit\">\n              <FindFit />\n            </Route>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/create/user\">\n              <CreateUser />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nfunction CreateUser() {\n  return <h2>Create a User</h2>;\n}\n\nfunction Login() {\n  return <h2>Login</h2>;\n}\n\nfunction about() {\n  return <About />\n}\n\nfunction FindFit() {\n  return <FindMyFit />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}