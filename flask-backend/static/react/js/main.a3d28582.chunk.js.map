{"version":3,"sources":["products/white blouse.jpeg","products/sweatpants.jpeg","products/knit_dress.jpeg","products/dress.jpeg","pages/Trending/Trending.js","pages/Splash/index.js","pages/Splash/Splash.js","pages/Home/cards.js","pages/Home/Items.js","pages/Home/Home.js","pages/Home/index.js","pages/Trending/Items.js","credentials/Fire.js","pages/Login/index.js","pages/Login/Login.js","pages/Join/index.js","pages/Join/Join.js","pages/Main/Main.js","pages/Main/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","items","Splash","id","className","to","Component","CARDS","React","name","image","description","backendUrl","Home","props","state","selectedFile","fileUploadHandler","event","setState","target","files","data","FormData","append","fetch","method","body","then","response","json","jresponse","requestText","results","toString","createCards","catch","console","log","cards","selectedCard","item_cards","cardId","this","document","getElementById","click","res","split","result","class","DropdownButton","title","variant","DropdownItem","as","type","for","onChange","hidden","Button","onClick","uploadClick","bind","Container","Row","Col","Card","style","width","Img","src","Body","Title","Text","image2","image3","image4","tempGet","tempPost","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Login","handleChange","e","value","handleSubmit","preventDefault","auth","signInWithEmailAndPassword","email","password","Form","onSubmit","Label","Input","placeholder","Join","firstName","lastName","createUserWithEmailAndPassword","Main","logout","user","authListener","onAuthStateChanged","location","includes","history","push","signOut","Navbar","color","light","expand","NavbarBrand","href","Nav","navbar","Fragment","NavItem","NavLink","exact","path","component","withRouter","App","Boolean","window","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"js/main.a3d28582.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/white blouse.1caa55de.jpeg\";","module.exports = __webpack_public_path__ + \"media/sweatpants.4ab44e25.jpeg\";","module.exports = __webpack_public_path__ + \"media/knit_dress.fc7ca43d.jpeg\";","module.exports = __webpack_public_path__ + \"media/dress.f90b697f.jpeg\";","import React, { Component } from \"react\";\nimport { DropdownButton, DropdownItem, Card, Container, Row, Col, Button, InputGroup } from 'react-bootstrap';\n// import DropdownItem from \"react-bootstrap/DropdownItem\";\nimport ButtonToolBar from \"react-bootstrap/ButtonToolbar\";\nimport Items from \"./Items\";\n\n\n\n\nconst backendUrl = \"https://fitfinderstatic.appspot.com/\"\n\nlet items;\n\n\nclass Trending extends Component {\n\n    constructor(props){\n        super(props);\n        items = new Array();\n    }\n\n    array_chunk(arr, size) {\n\n      var result = [];\n      var slice = Array(size);\n      var count =1;\n\n      for (let elem in arr) {\n          slice.push(elem);\n\n          count++;\n          if(count%(size+1) == 0){\n\n             result.push(slice);\n             slice = Array(size);\n          }\n      }\n      result.push(slice);\n      return result;\n    }\n\n\n\n    render(){\n\n        if(items == undefined || items.length == 0 ){\n\n            fetch(backendUrl+\"trendingUpdate\")\n            .then(response => response.json())\n            .then((jsonData) => {\n                // jsonData is parsed json object received from url\n                console.log('dataRecieved')\n                items = jsonData.products;\n                this.setState({name : \"Updated\"});\n            })\n            .catch((error) => {\n                console.log(\"api request error\")\n                // handle your errors here\n                console.error(error)\n            });\n            return (<div id=\"trending\"></div>);\n        }\n        else{\n            const rows = this.array_chunk(items,5);\n\n            console.log(\"rendering\");\n\n            return (\n                <div id=\"trending\">\n                    <Container>\n                    {\n                        rows.map((row) => (\n                            <Row>\n                            {\n                                row.map((col) => (\n                                    <Col>\n                                    <Card style={{ width: '13rem' }}>\n                                      <Card.Img variant=\"top\" src={\"//\"+items[col].img} />\n                                      <Card.Body>\n                                        <Card.Title>{items[col].name}</Card.Title>\n                                        <Card.Text>\n                                            Likes {items[col].likes}\n                                        </Card.Text>\n                                        <p>{items[col].price}</p>\n                                      </Card.Body>\n                                    </Card>\n                                    </Col>\n                                ))\n                            }\n                            </Row>\n                        ))\n                    }\n                    </Container>\n                </div>\n            );\n        }\n\n    }\n\n\n\n\n}\n\nexport default Trending;\n","import Splash from \"./Splash\";\n\nexport default Splash;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Splash extends Component {\n  render() {\n    return (\n      <div id=\"splash\">\n        <div className=\"text-container\">\n          <h1>Fit Finder</h1>\n          <p>Find your fits here!</p>\n          <Link to=\"/join\">\n            <button id=\"enter-button\">Enter</button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Splash;\n","export const CARDS = [\n    {\n        id: 0,\n        name: \"dress\",\n        image: \"../../products/dress.jpeg\",\n        description: \"long dress\"\n    },\n    {\n        id: 1,\n        name: \"White blouse\",\n        image: \"../../products/white blouse.jpeg\",\n        description: \"white blouse\"\n    }\n]","import React from 'react';\nimport { Card, CardImg } from 'reactstrap';\n\nclass Items extends React.Component {\n    renderCard(card) {\n        return(\n            <Card>\n                <CardImg src={card.image} alt={card.name} />\n            </Card>\n        )\n    }\n\n    renderInfo(card) {\n        return (\n            <ul>\n                <li>\n                    <h3>Name: </h3>\n                    <div>{card.name}</div>\n                </li>\n            </ul>\n        )\n    }\n\n    render() {\n        const card = this.props.card;\n        return (\n            <div className=\"cardInfo p-4\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-5\">\n                        {this.renderCard(card)}\n                    </div>\n                    <div className=\"col-12 col-md-5\">\n                        <h4>Item Information</h4>\n                        {this.renderInfo(card)}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Items;","import React, { Component } from \"react\";\nimport { DropdownButton, DropdownItem, Card, CardImg, Container, Row, Col, Button, InputGroup } from 'react-bootstrap';\n// import DropdownItem from \"react-bootstrap/DropdownItem\";\nimport ButtonToolBar from \"react-bootstrap/ButtonToolbar\";\nimport Items from \"./Items\";\nimport { CARDS } from \"./cards\";\nimport image1 from \"../../products/dress.jpeg\";\nimport image2 from \"../../products/white blouse.jpeg\";\nimport image3 from \"../../products/sweatpants.jpeg\";\nimport image4 from \"../../products/knit_dress.jpeg\";\n\nconst backendUrl = \"https://fitfinderstatic.appspot.com/\"\nclass Home extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      cards: CARDS,\n      selectedCard: null,\n        results: [],\n        item_cards: [],\n    };\n\n    // this.imageClicked = this.imageClicked.bind(this);\n  }\n\n  cardSelect(cardId){\n    this.setState({ selectedCard: cardId });\n  }\n\n  uploadClick() {\n    document.getElementById(\"uploadImg\").click()\n  }\n\n  tempGet() {\n    fetch(backendUrl+\"temp\", {\n      method: 'GET'\n    }).then(response => response.json().then(jresponse => {\n      console.log(jresponse)\n      this.setState({requestText: jresponse.res})\n    })).catch(() => {\n      console.log(\"ERROR\")\n    })\n}\n\n  tempPost() {\n    fetch(backendUrl+\"temp\", {\n      method: 'POST'\n    }).then(response => response.json().then(jresponse => {\n      console.log(jresponse)\n      this.setState({requestText: jresponse.res})\n\n    })).catch(() => {\n      console.log(\"ERROR\")\n    })\n  }\n\n\n  state = {\n    selectedFile: null\n  }\n\n  fileUploadHandler = event => {\n    this.setState({\n      selectedFile: event.target.files[0]\n    })\n      const data = new FormData();\n    data.append('file', event.target.files[0]);\n    //data.append('filename', this.fileName.value);\n    //console.log(event.target.files[0])\n    fetch(backendUrl+\"productSearch\", {\n      method: 'POST',\n      body: data\n    }).then(response => response.json().then(jresponse => {\n      this.setState({requestText: jresponse.results.toString()})\n        this.setState({results: jresponse.results})\n        this.createCards()\n    })).catch(() => {\n      console.log(\"ERROR\")\n    })\n  };\n\n  createCards() {\n      let results = this.state.requestText.split(\",\")\n\n    for (let result in results){\n        console.log(\"results are: \" + result)\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"home\">\n        <ButtonToolBar class=\"btn_bar\">\n          <DropdownButton class=\"dropdown\" title=\"Sort by\" variant=\"secondary\">\n            <DropdownItem as=\"button\">Price: Low to High</DropdownItem>\n            <DropdownItem as=\"button\">Price: High to Low</DropdownItem>\n          </DropdownButton>\n          <DropdownButton class=\"dropdown\" title=\"Sizes\" variant=\"secondary\">\n            {/* <DropdownItem>XS</DropdownItem> */}\n            <div class=\"input-group-append\">\n              <div class=\"input-group-text\">\n                  <input type=\"checkbox\" class=\"form-check-input ml-0\" id=\"checkbox\" />\n                  <label class=\"form-check-label ml-5\" for=\"exampleCheck1\">XS</label>\n              </div>\n              <div class=\"input-group-text\">\n                  <input type=\"checkbox\" class=\"form-check-input ml-0\" id=\"checkbox\" />\n                  <label class=\"form-check-label ml-5\" for=\"exampleCheck1\">S</label>\n              </div>\n              <div class=\"input-group-text\">\n                  <input type=\"checkbox\" class=\"form-check-input ml-0\" id=\"checkbox\" />\n                  <label class=\"form-check-label ml-5\" for=\"exampleCheck1\">M</label>\n              </div>\n              <div class=\"input-group-text\">\n                  <input type=\"checkbox\" class=\"form-check-input ml-0\" id=\"checkbox\" />\n                  <label class=\"form-check-label ml-5\" for=\"exampleCheck1\">L</label>\n              </div>\n              <div class=\"input-group-text\">\n                  <input type=\"checkbox\" class=\"form-check-input ml-0\" id=\"checkbox\" />\n                  <label class=\"form-check-label ml-5\" for=\"exampleCheck1\">XL, XXL</label>\n              </div>\n            </div>\n          </DropdownButton>\n          <DropdownButton class=\"dropdown\" title=\"Brands\" variant=\"secondary\">\n          <div class=\"input-group-append\">\n              <div class=\"input-group-text\">\n                  <input type=\"checkbox\" class=\"form-check-input ml-0\" id=\"checkbox\" />\n                  <label class=\"form-check-label ml-5\" for=\"checkbox\">HM</label>\n              </div>\n              <div class=\"input-group-text\">\n                  <input type=\"checkbox\" class=\"form-check-input ml-0\" id=\"checkbox\" />\n                  <label class=\"form-check-label ml-5\" for=\"checkbox\">Calvin Klein</label>\n              </div>\n            </div>\n          </DropdownButton>\n        </ButtonToolBar>\n        <hr />\n          {/* <Items card={this.state.cards} /> */}\n        \n        <div class=\"inputGroup\">\n          <input id=\"uploadImg\" type=\"file\" onChange={this.fileUploadHandler} hidden/>\n              <Button type=\"button\" variant=\"secondary\" onClick={this.uploadClick.bind(this)}>Upload\n              </Button>\n        </div>\n\n        <br />\n        <Container>\n          <Row>\n            <Col>\n              <Card style={{ width: '13rem' }}>\n                <Card.Img variant=\"top\" src=\"https://storage.googleapis.com/fitfinder-3e49c.appspot.com/Cotton_Cargo_Shorts\" />\n                <Card.Body>\n                  <Card.Title>Black Dress</Card.Title>\n                  <Card.Text>\n                    Long, black dress\n                  </Card.Text>\n                  <p>$15.99</p>\n                </Card.Body>\n              </Card>\n          </Col>\n          \n          <Col>\n              <Card style={{ width: '13rem' }}>\n                <Card.Img variant=\"top\" src={image2} />\n                <Card.Body>\n                  <Card.Title>White Blouse</Card.Title>\n                  <Card.Text>\n                    Silky, white blouse\n                  </Card.Text>\n                  <p>$15.99</p>\n                </Card.Body>\n              </Card>\n          </Col>\n          <Col>\n          <Card style={{ width: '13rem' }}>\n              <Card.Img variant=\"top\" src={image3} />\n                <Card.Body>\n                  <Card.Title>Sweatpants</Card.Title>\n                  <Card.Text>\n                    Gray, elastic sweatpants\n                  </Card.Text>\n                  <p>$17.99</p>\n                </Card.Body>\n              </Card>\n          </Col>\n          <Col>\n          <Card style={{ width: '13rem' }}>\n            <Card.Img variant=\"top\" src={image4} />\n              <Card.Body>\n                <Card.Title>Brown knit dress</Card.Title>\n                <Card.Text>\n                  Knee-cap length dress \n                </Card.Text>\n                <p>$15.99</p>\n              </Card.Body>\n            </Card>\n          </Col>\n          </Row>\n        </Container>\n          <div className=\"upload\">\n              <input id=\"uploadImg\" type=\"file\" onChange={this.fileUploadHandler} hidden/>\n              <button type=\"button\" className=\"btn btn-outline-dark\" onClick={this.uploadClick.bind(this)} hidden>Upload\n              </button>\n              <button type=\"button\" className=\"btn btn-outline-dark\" onClick={this.tempGet.bind(this)} hidden>SEND GET\n                  REQUEST\n              </button>\n              <button type=\"button\" className=\"btn btn-outline-dark\" onClick={this.tempPost.bind(this)} hidden>SEND POST\n                  REQUEST\n              </button>\n              <button type=\"button\" className=\"btn btn-outline-dark\" >{this.state.requestText}</button>\n              {/* <img src={require(this.state.selectedFile)} /> */}\n          </div>\n      </div>\n\n    );\n  }\n}\n\nexport default Home;\n","import Home from \"./Home\";\n\nexport default Home;\n","import React from 'react';\nimport { Card, CardImg } from 'reactstrap';\n\nclass Items extends React.Component {\n    renderCard(card) {\n        return(\n            <Card>\n                <CardImg src={card.image} alt={card.name} />\n            </Card>\n        )\n    }\n\n    renderInfo(card) {\n        return (\n            <ul>\n                <li>\n                    <h3>Name: </h3>\n                    <div>{card.name}</div>\n                </li>\n            </ul>\n        )\n    }\n\n    render() {\n        const card = this.props.card;\n        return (\n            <div className=\"cardInfo p-4\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-5\">\n                        {this.renderCard(card)}\n                    </div>\n                    <div className=\"col-12 col-md-5\">\n                        <h4>Item Information</h4>\n                        {this.renderInfo(card)}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Items;","import firebase from \"firebase\";\n\nconst config = {\n  apiKey: \"AIzaSyBU27__IezAnwg4lNY9Ax9aW35XJiB3ON8\",\n  authDomain: \"fitfinder-3e49c.firebaseapp.com\",\n  databaseURL: \"https://fitfinder-3e49c.firebaseio.com\",\n  projectId: \"fitfinder-3e49c\",\n  storageBucket: \"fitfinder-3e49c.appspot.com\",\n  messagingSenderId: \"303945530497\",\n  appId: \"1:303945530497:web:528eeabe927b2e99bb6180\",\n  measurementId: \"G-PXD3B5Z974\"\n};\n\nconst fire = firebase.initializeApp(config);\nexport default fire;\n","import Login from \"./Login\";\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, Row } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport fire from \"../../credentials/Fire\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n\n    console.log(this.state);\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    fire\n      .auth()\n      .signInWithEmailAndPassword(this.state.email, this.state.password);\n  };\n\n  render() {\n    return (\n      <div id=\"login\">\n        <div className=\"wrapper\">\n          <div className=\"form-wrapper\">\n            <h1>Login</h1>\n            <Form className=\"container\" onSubmit={this.handleSubmit}>\n              <div className=\"email\">\n                <Label for=\"email\">Email</Label>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  placeholder=\"example@example.com\"\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div className=\"password\">\n                <Label for=\"password\">Password</Label>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  placeholder=\"password123\"\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div className=\"createAccount\">\n                <Button\n                  type=\"submit\"\n                  id=\"login-button\"\n                  onChange={this.handleSubmit}\n                >\n                  Login\n                </Button>\n                <Link to=\"/join\">\n                  <small>Create an account!</small>\n                </Link>\n              </div>\n            </Form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import Join from \"./Join\";\n\nexport default Join;\n","import React, { Component } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, Row } from \"reactstrap\";\n// import { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport fire from \"../../credentials/Fire\";\n\nclass Join extends Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    fire\n      .auth()\n      .createUserWithEmailAndPassword(this.state.email, this.state.password);\n  };\n\n  render() {\n    return (\n      <div id=\"login\">\n        <div className=\"wrapper\">\n          <div className=\"form-wrapper\">\n            <h1>Create Account</h1>\n            <Form className=\"container\" onSubmit={this.handleSubmit}>\n              <div className=\"firstName\">\n                <Label for=\"firstName\">First Name</Label>\n                <Input\n                  type=\"firstName\"\n                  name=\"firstName\"\n                  id=\"firstName\"\n                  placeholder=\"First Name\"\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div className=\"lastName\">\n                <Label for=\"lastName\">Last Name</Label>\n                <Input\n                  type=\"lastName\"\n                  name=\"lastName\"\n                  id=\"lastName\"\n                  placeholder=\"Last Name\"\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div className=\"email\">\n                <Label for=\"email\">Email</Label>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  placeholder=\"example@example.com\"\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div className=\"password\">\n                <Label for=\"password\">Password</Label>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  placeholder=\"password123\"\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div className=\"createAccount\">\n                <Button\n                  type=\"submit\"\n                  id=\"join-button\"\n                  onChange={this.handleSubmit}\n                >\n                  Join\n                </Button>\n                <Link to=\"/login\">\n                  <small>Already Have an Account?</small>\n                </Link>\n              </div>\n            </Form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Join;\n","import React, { Component } from \"react\";\nimport { Navbar, NavbarBrand, Nav, NavItem, NavLink, Row } from \"reactstrap\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  withRouter\n} from \"react-router-dom\";\nimport Splash from \"../Splash\";\nimport Home from \"../Home\";\nimport Trending from \"../Trending\";\nimport Login from \"../Login\";\nimport Join from \"../Join\";\nimport fire from \"../../credentials/Fire\";\n\nimport \"../../App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../../styles/main.scss\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.logout = this.logout.bind(this);\n    this.state = {\n      user: {}\n    };\n  }\n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({ user });\n        if (!this.props.location[\"pathname\"].includes(\"trending\")) {\n          this.props.history.push(\"/home\");\n          console.log(\"Pushing to home\");\n        } else {\n          console.log(\"staying on trending\");\n        }\n      } else {\n        this.setState({ user: null });\n      }\n    });\n  }\n\n  logout() {\n    fire.auth().signOut();\n    this.props.history.push(\"/login\");\n  }\n\n  render() {\n    console.log(this.state.user);\n    return (\n      <div>\n        <Navbar color=\"light\" light expand=\"md\">\n          <NavbarBrand href=\"/\">FitFinder</NavbarBrand>\n          <Nav className=\"ml-auto\" navbar>\n            {this.state.user ? (\n              <React.Fragment>\n                {/* <NavItem>\n                  <NavLink href=\"/trending\">Trending</NavLink>\n                </NavItem> */}\n                <NavItem>\n                  <NavLink href=\"/home\">Home</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href=\"/\" onClick={this.logout}>\n                    Logout\n                  </NavLink>\n                </NavItem>\n              </React.Fragment>\n            ) : (\n              <NavItem>\n                <NavLink href=\"\">About</NavLink>\n              </NavItem>\n            )}\n          </Nav>\n        </Navbar>\n\n        <Switch>\n          <Route exact path=\"/\" component={Splash} />\n          <Route path=\"/home\" component={Home} />\n          {/* <Route path=\"/trending\" component={Trending} /> */}\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/join\" component={Join} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Main);\n","import Main from \"./Main\";\n\nexport default Main;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Main from \"./pages/Main\";\n\nfunction App() {\n  return (\n    <Router>\n      <Main />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}